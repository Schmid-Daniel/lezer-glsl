# Function Definition With Body

int myFunc(float b, AB c) {
  callExp(1, e);
  return 2;
}

==>

Program(
  FunctionDefinition(
    PrimitiveType,
    FunctionDeclarator(
      IdentifierDefinition,
      ParameterList(
        ParameterDeclaration(
          PrimitiveType, IdentifierDefinition
        ),
        ParameterDeclaration(
          TypeIdentifier, IdentifierDefinition
        )
      ) 
    ),
    CompoundStatement(
      ExpressionStatement(
        CallExpression(Identifier, ArgumentList(Number, Identifier)),
      )
      ReturnStatement(return, Number)
    )
  )
)


# Inline Struct definitions

struct{int a;} myFunc(struct {int b;} c) {
  return AB(2);
}

==>

Program(
  FunctionDefinition(
    StructSpecifier(
      struct,
      StructDeclarationList(
        FieldDeclaration(PrimitiveType, Identifier)
      )
    ),
    FunctionDeclarator(
      IdentifierDefinition,
      ParameterList(
        ParameterDeclaration(
          StructSpecifier(
            struct,
            StructDeclarationList(
              FieldDeclaration(PrimitiveType, Identifier)
            )
          ),
          IdentifierDefinition
        )
      )
    ),
    CompoundStatement(
      ReturnStatement(
        return,
        CallExpression(
          Identifier,
          ArgumentList(Number)
        )
      )
    )
  )
)


# Void Function Definition

void myFunc();

==>

Program(
  FunctionDefinition(
    PrimitiveType,
    FunctionDeclarator(
      IdentifierDefinition,
      ParameterList
    )
  )
)


# Qualifiers In ParameterList

float myFunc(uniform const out int a, layout(A=2) int b);

==> 

Program(
  FunctionDefinition(
    PrimitiveType,
    FunctionDeclarator(
      IdentifierDefinition,
      ParameterList(
        ParameterDeclaration(
          uniform, const, out, PrimitiveType, IdentifierDefinition
        ),
        ParameterDeclaration(
          LayoutQualifier(layout, Identifier, Number), PrimitiveType IdentifierDefinition
        )
      )
    )
  )
)